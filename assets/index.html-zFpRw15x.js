import{_ as t,r as e,o,c,b as n,d as s,e as p,a as l}from"./app-ONAUUelQ.js";const i="/hello-nest-doc/images/swagger.png",r={},u=l(`<h1 id="配置示例" tabindex="-1"><a class="header-anchor" href="#配置示例" aria-hidden="true">#</a> 配置示例</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/modules/user/user.controller.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiTags<span class="token punctuation">,</span> ApiOperation<span class="token punctuation">,</span> ApiResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/swagger&#39;</span><span class="token punctuation">;</span>

@<span class="token function">Controller</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span>
@<span class="token function">ApiTags</span><span class="token punctuation">(</span><span class="token string">&#39;用户相关接口&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> readonly userService<span class="token operator">:</span> UserService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  @<span class="token function">Post</span><span class="token punctuation">(</span><span class="token string">&#39;addUser&#39;</span><span class="token punctuation">)</span>
  @<span class="token function">ApiOperation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">summary</span><span class="token operator">:</span> <span class="token string">&#39;获取用户列表&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// description: &#39;获取所有的用户列表&#39;,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  @<span class="token function">ApiResponse</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;成功返回200&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">schema</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
          <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">addUser</span><span class="token punctuation">(</span>@<span class="token function">Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span> userData<span class="token operator">:</span> AddUserDto<span class="token punctuation">)</span><span class="token operator">:</span> UserItem<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span>userData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/modules/user/dto/addUser.dto.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> IsNotEmpty<span class="token punctuation">,</span> IsString<span class="token punctuation">,</span> IsNumber<span class="token punctuation">,</span> IsIn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;class-validator&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/swagger&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AddUserDto</span> <span class="token punctuation">{</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;id should not be empty&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  @<span class="token function">IsNumber</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">allowNaN</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;id must be a number&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;用户唯一 id&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">;</span>

  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;用户名&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>

  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;用户年龄&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>

  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;用户性别： 1 -&gt; 男、2 -&gt; 女&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k={href:"http://localhost:3000/swagger",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[n("img",{src:i,alt:""})],-1),v={href:"https://app.apifox.com/",target:"_blank",rel:"noopener noreferrer"};function m(b,y){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("配置完成访问："),n("a",k,[s("http://localhost:3000/swagger"),p(a)])]),d,n("p",null,[s("🚩 当然，如果你觉得 Swagger 界面不符合你风格的话，可以试试 "),n("a",v,[s("https://app.apifox.com/"),p(a)])])])}const f=t(r,[["render",m],["__file","index.html.vue"]]);export{f as default};
