import{_ as t,o as n,c as r,a as s,e as o}from"./app-Q-2BQopx.js";const a={},i=o('<h1 id="为什么学习-nest-js" tabindex="-1"><a class="header-anchor" href="#为什么学习-nest-js" aria-hidden="true">#</a> 为什么学习 Nest.js？</h1><ul><li><p><strong>前端已 🙈，去卷后端 🐒 → 广度和深度的问题，不可代替性</strong>。作为一名前端开发工程师来说，学习后端开发可以为你的技能树增枝添叶 🌿。掌握后端开发能力将使你更全面地理解应用程序的构建和互联网技术的全貌，增加你的不可代替性 🤓</p></li><li><p><strong>仅前端开发的应用没有记忆，不能互联 🤔 → 学习后端，为应用赋能</strong>。纯粹的前端应用缺少存储和数据处理的能力，学习后端开发可以为应用赋予记忆与互联的能力。通过后端开发，你可以管理数据、连接不同系统，并为前端应用提供持久性和交互性 🎉</p></li><li><p><strong>同为 JS 语言，学习成本较小，多门技能多条路 😆 → 了解服务端编码思想</strong>。JavaScript是一门全栈语言，学习成本较小，且学习后端开发也能增加你的技能范围。掌握后端开发思维可以拓展你的职业道路并拥有更多机会 🧐</p></li><li><p><strong>同类型框架中占绝对领先地位（star、下载量、Google 趋势）😲 → Nest.js 优势</strong>。Nest.js 在类似框架中拥有巨大优势，这体现在其 star 数、下载量和在 Google 趋势上的表现。选择学习 Nest.js 将让你站在技术发展的前沿 🚀</p></li></ul>',2),l=["src"],c=["src"];function d(e,g){return n(),r("div",null,[i,s("img",{src:e.$withBase("/images/npm.png"),alt:"npm"},null,8,l),s("img",{src:e.$withBase("/images/trend.png"),alt:"google trend"},null,8,c)])}const _=t(a,[["render",d],["__file","index.html.vue"]]);export{_ as default};
