(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{304:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"相关装饰器介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关装饰器介绍"}},[t._v("#")]),t._v(" 相关装饰器介绍")]),t._v(" "),s("blockquote",[s("p",[t._v("Nest 是基于装饰器这种语言特性而创建的。在很多常见的编程语言中，装饰器是一个广为人知的概念，但在 JavaScript 世界中，这个概念仍然相对较新。所以为了更好地理解装饰器是如何工作的，建议看看这篇文章 "),s("a",{attrs:{href:"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841",target:"_blank",rel:"noopener noreferrer"}},[t._v("Exploring EcmaScript Decorators"),s("OutboundLink")],1),t._v("。下面给出一个简单的定义：")])]),t._v(" "),s("blockquote",[s("p",[t._v("ES2016 装饰器是一个表达式，它返回一个可以将目标、名称和属性描述符作为参数的函数。通过在装饰器前面添加一个 @ 字符并将其放置在你要装饰的内容的最顶部来应用它。可以为类、方法或属性定义装饰器。")])]),t._v(" "),s("p",[t._v("上述内容是 Nest 官网对装饰器的定义。简而言之，装饰器就是一个函数，它接受一个参数，然后返回一个函数，返回的函数可以被附加到类、方法或属性上。")]),t._v(" "),s("h2",{attrs:{id:"控制器装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制器装饰器"}},[t._v("#")]),t._v(" 控制器装饰器")]),t._v(" "),s("p",[t._v("控制器装饰器是 Nest.js 中定义路由的主要方式。你可以使用@Controller 装饰器来创建控制器类，并使用@Get、@Post、@Put 等装饰器来定义路由处理程序方法。这使得路由的定义变得非常直观和易于维护。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"items"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ItemsController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This action returns all items"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"参数装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数装饰器"}},[t._v("#")]),t._v(" 参数装饰器")]),t._v(" "),s("p",[t._v("Nest 提供了一组有用的参数装饰器，可以将它们与 HTTP 路由处理程序一起使用。参数装饰器允许你在控制器方法中访问请求对象、响应对象和其他相关信息。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("This action returns item ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("这里只介绍部分常用的装饰器，可以涵盖大部分业务场景，更多装饰器请参考"),s("a",{attrs:{href:"https://docs.nestjs.com/custom-decorators",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("路由装饰器（Route decorators）：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("@Get()：定义处理 GET 请求的路由。")])]),t._v(" "),s("li",[s("p",[t._v("@Post()：定义处理 POST 请求的路由。")])]),t._v(" "),s("li",[s("p",[t._v("@Put()：定义处理 PUT 请求的路由。")])]),t._v(" "),s("li",[s("p",[t._v("@Delete()：定义处理 DELETE 请求的路由。")])]),t._v(" "),s("li",[s("p",[t._v("@Patch()：定义处理 PATCH 请求的路由。")])])])]),t._v(" "),s("li",[s("p",[t._v("请求体装饰器（Request body decorators）：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("@Body()：从请求体中提取数据。")])]),t._v(" "),s("li",[s("p",[t._v("@Query()：从查询参数中提取数据。")])]),t._v(" "),s("li",[s("p",[t._v("@Param()：从路由参数中提取数据。")])]),t._v(" "),s("li",[s("p",[t._v("@Headers()：从请求头中提取数据。")])])])]),t._v(" "),s("li",[s("p",[t._v("响应装饰器（Response decorators）：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("@Res()：注入原生 response 对象。")])]),t._v(" "),s("li",[s("p",[t._v("@Headers()：设置响应头。")])])])]),t._v(" "),s("li",[s("p",[t._v("状态码装饰器（Status code decorators）：")]),t._v(" "),s("ul",[s("li",[t._v("@HttpCode()：设置响应的状态码。")])])])]),t._v(" "),s("h2",{attrs:{id:"自定义装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义装饰器"}},[t._v("#")]),t._v(" 自定义装饰器")]),t._v(" "),s("p",[t._v("有时，你可能需要创建自定义装饰器以满足特定的需求。你可以使用@Injectable()装饰器来创建可注入的服务，然后在需要的地方使用@Inject 装饰器来注入这些服务。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello from MyService!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'items'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ItemsController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" readonly myService"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MyService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);